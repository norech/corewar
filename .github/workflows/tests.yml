name: Tests

on:
    push:
        branches:
        - dev
        - main
        - master
jobs:
    unit-tests-asm:
        runs-on: ubuntu-20.04
        container: docker://epitechcontent/epitest-docker
        steps:
        - uses: actions/checkout@v2
        - name: Run unit-tests
          run: make -C asm tests_run 2>&1 | tee -a merged_output | tee tests_output
        - name: Run coverage
          run: make -C asm coverage 2>&1 | tee -a merged_output | tee coverage_output
        - uses: actions/upload-artifact@v2
          with:
            name: coverage_output
            path: merged_output
        - name: Send notification
          shell: bash
          if: always()
          run: |
               synthesis=$(cat tests_output | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g" | grep "^\[====\] Synthesis:")
               coverage_branch=$(cat coverage_output | grep "TOTAL" | head -1)
               coverage_lines=$(cat coverage_output | grep "TOTAL" | tail -1)
               coverage_branch_msg=$(echo $coverage_branch | awk '{print $4 ", " $3 " out of " $2}')
               coverage_lines_msg=$(echo $coverage_lines | awk '{print $4 ", " $3 " out of " $2}')
               GITHUB_WORKFLOW_URL=https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
               echo '{"content": "**'$GITHUB_REPOSITORY'**\n'$synthesis'","embeds": [
                         {"title": "ASM Coverage","color": null,"fields": [
                                   {"name": "Branches","value": "'$coverage_branch_msg'","inline": true},
                                   {"name": "Lines","value": "'$coverage_lines_msg'","inline": true}],
                         "author": {"name": "GitHub Action","url": "'$GITHUB_WORKFLOW_URL'"}}]}' > notification_data
               cat notification_data
               curl --data "$(cat notification_data)" --header "Content-Type: application/json" https://discord.com/api/webhooks/836673978596065310/seRSxn9ifMj9i5KaKDetuuZaleXUMW-kRmIiuusIxtRmHEs-gyBaws5_A1Tg2oobQ0qK
      unit-tests-corewar:
        runs-on: ubuntu-20.04
        container: docker://epitechcontent/epitest-docker
        steps:
        - uses: actions/checkout@v2
        - name: Run unit-tests
          run: make -C corewar tests_run 2>&1 | tee -a merged_output | tee tests_output
        - name: Run coverage
          run: make -C corewar coverage 2>&1 | tee -a merged_output | tee coverage_output
        - uses: actions/upload-artifact@v2
          with:
            name: coverage_output
            path: merged_output
        - name: Send notification
          shell: bash
          if: always()
          run: |
               synthesis=$(cat tests_output | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g" | grep "^\[====\] Synthesis:")
               coverage_branch=$(cat coverage_output | grep "TOTAL" | head -1)
               coverage_lines=$(cat coverage_output | grep "TOTAL" | tail -1)
               coverage_branch_msg=$(echo $coverage_branch | awk '{print $4 ", " $3 " out of " $2}')
               coverage_lines_msg=$(echo $coverage_lines | awk '{print $4 ", " $3 " out of " $2}')
               GITHUB_WORKFLOW_URL=https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
               echo '{"content": "**'$GITHUB_REPOSITORY'**\n'$synthesis'","embeds": [
                         {"title": "Corewar VM Coverage","color": null,"fields": [
                                   {"name": "Branches","value": "'$coverage_branch_msg'","inline": true},
                                   {"name": "Lines","value": "'$coverage_lines_msg'","inline": true}],
                         "author": {"name": "GitHub Action","url": "'$GITHUB_WORKFLOW_URL'"}}]}' > notification_data
               cat notification_data
               curl --data "$(cat notification_data)" --header "Content-Type: application/json" https://discord.com/api/webhooks/836673978596065310/seRSxn9ifMj9i5KaKDetuuZaleXUMW-kRmIiuusIxtRmHEs-gyBaws5_A1Tg2oobQ0qK
              